DONE - Add an environment variable which controls the output log file name
DONE - Add printing stack facility
DONE - Add an environment variable which controls whether to print or not the stack
DONE - Make it working for C code
DONE - Decide what to do with libpthread.so - should be looked for by the ldd output
DONE - write a script which wrappers the LD_PRELOAD and the actual call
DONE - write an analysis script
DONE - Add headers with a license
DONE - Add README file
DONE - Add Changelog file
- Check indirect linking with libpthread.so
- Think of better stack printing
- Test cases: proper order in .so library
              improper order in elf (2 mutexes)
              improper order in elf (many mutexes)
DONE - Add mi command line arguments to control log file name and backtrace printing
- Test case: unlocking a not locked mutex
DONE - statmi return code: non-zero if there are warnings or mistakes
- Test case: left locked mutexes
- Test case: time consuming operations
- Test case: failed operations
- Test case: recursive mutexes
DONE - Make sure that the error output goes into stderr
- condition variables (are the mutexes intercepted as well?)
DONE - make sure that the traceback is printed in the same order as mutex lock stack
- collected chains printout does not look properly in case of backtrace and -v
  The operations must be printed in reverse order
DONE - add limit to the number of errors
DONE - threads and mutexes legend is not alphabetically sorted

